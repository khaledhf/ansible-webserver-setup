name: Security Scan

on:
#  schedule:
#    - cron: '0 2 * * *'  # Daily at 2 AM
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  dependency-scan:
    name: Dependency Vulnerability Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-results.sarif'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'

  code-scan:
    name: Code Quality and Security
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install security tools
        run: |
          python -m pip install --upgrade pip
          pip install bandit safety

      - name: Run Bandit security linter
        run: |
          bandit -r . -f json -o bandit-report.json || true

      - name: Run Safety check
        run: |
          safety check --json --output safety-report.json || true

      - name: Upload security reports
        uses: actions/upload-artifact@v3
        with:
          name: security-reports
          path: |
            bandit-report.json
            safety-report.json

  infrastructure-scan:
    name: Infrastructure Security Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install Ansible security tools
        run: |
          python -m pip install --upgrade pip
          pip install ansible ansible-lint

      - name: Run Ansible security checks
        run: |
          # Check for hardcoded passwords
          grep -r "password\|secret\|key" roles/ --exclude-dir=.git || true
          
          # Validate Ansible security best practices
          ansible-lint roles/ --profile production

      - name: Check for sensitive data
        run: |
          # Check for potential secrets in files
          grep -r "AKIA\|sk_\|pk_" . --exclude-dir=.git || true 
